choropleth <- choropleth[!duplicated(choropleth$subregion), ]
choropleth
choropleth <- choropleth[!duplicated(choropleth$subregion), ]
choropleth
choropleth <- merge(county_measles, county, by = "subregion")
choropleth <- inner_join(county_measles, county, by = "subregion")
choropleth <- choropleth[!duplicated(choropleth$subregion), ]
choropleth
class(county)
map <- ggplot(data = county, aes(x = long, y = lat, group = group))
map
map <- ggplot(data = state, aes(x = long, y = lat, group = group))
map
gg <- uscounties$g
gg
class(gg)
gg + geom_path()
gg +
geom_polygon(aes(fill = id)) +
coord_fixed(1.3) +
guides(fill = FALSE)
View(gg)
shape_map <- tbl_df(fortify(gg, region="Name"))
shape_map <- tbl_df(fortify(county, region="Name"))
shape_map
shape_map <- tbl_df(fortify(county, region="region"))
shape_map <- tbl_df(fortify(county, region="subregion"))
shape_map
class(shape_map)
install.packages("tigris")
library(tigris)
library(ggplot2)
library(ggthemes)
me <- counties("Maine", cb = TRUE)
me_map <- fortify(me)
gg <- ggplot()
gg <- gg + geom_map(data=me_map, map=me_map,
aes(x=long, y=lat, map_id=id),
color="black", fill="white", size=0.25)
gg <- gg + coord_map()
gg <- gg + theme_map()
gg
me_map <- fortify(county)
gg <- ggplot()
gg <- gg + geom_map(data=me_map, map=me_map,
aes(x=long, y=lat, map_id=id),
color="black", fill="white", size=0.25)
gg <- gg + coord_map()
gg <- gg + theme_map()
gg
me <- counties()
me <- counties()
me_map <- fortify(county)
me_map <- fortify(me)
gg <- ggplot()
gg <- gg + geom_map(data=me_map, map=me_map,
aes(x=long, y=lat, map_id=id),
color="black", fill="white", size=0.25)
gg <- gg + coord_map()
gg <- gg + theme_map()
gg
install.packages("usmap")
library(usmap)
library(ggplot2)
plot_usmap(regions = "counties") +
labs(title = "US Counties", subtitle = "This is a blank map of the counties of the United States.") +
theme(panel.background = element_rect(colour = "black", fill = "lightblue"))
gg <- plot_usmap(regions = "counties") +
labs(title = "US Counties", subtitle = "This is a blank map of the counties of the United States.") +
theme(panel.background = element_rect(colour = "black", fill = "lightblue"))
class(gg)
gg <- plot_usmap(regions = "counties") +
labs(title = "US Counties", subtitle = "This is a blank map of the counties of the United States.") +
theme(panel.background = element_rect(colour = "black", fill = "lightblue"))
class(gg)
plot_usmap(data = county_measles, values = "count", lines = "red") +
scale_fill_continuous(name = "Population (2015)", label = scales::comma) +
theme(legend.position = "right")
county_measles
plot_usmap(data = county_measles, values = "cases", lines = "red") +
scale_fill_continuous(name = "Population (2015)", label = scales::comma) +
theme(legend.position = "right")
county_measles
colnames(county_measles)[colnames(county_measles)=="countyfp"] <- "FIPS"
plot_usmap(data = county_measles, values = "cases", lines = "red") +
scale_fill_continuous(name = "Population (2015)", label = scales::comma) +
theme(legend.position = "right")
county_measles <- read.xlsx("county_level_measles.xlsx")
colnames(county_measles)[colnames(county_measles)=="countyfp"] <- "fips"
plot_usmap(data = county_measles, values = "cases", lines = "red") +
scale_fill_continuous(name = "Population (2015)", label = scales::comma) +
theme(legend.position = "right")
plot_usmap(data = county_measles, values = "cases", lines = "blue") +
scale_fill_continuous(name = "Population (2015)", label = scales::comma) +
theme(legend.position = "right")
gg + plot_usmap(data = county_measles, values = "cases", lines = "blue") +
scale_fill_continuous(name = "Population (2015)", label = scales::comma) +
theme(legend.position = "right")
gg + ggplot(data = county_measles, values = "cases", lines = "blue") +
scale_fill_continuous(name = "Population (2015)", label = scales::comma) +
theme(legend.position = "right")
gg + ggplot2(data = county_measles, values = "cases", lines = "blue") +
scale_fill_continuous(name = "Population (2015)", label = scales::comma) +
theme(legend.position = "right")
library(ggplot2)
gg + ggplot2(data = county_measles, values = "cases", lines = "blue") +
scale_fill_continuous(name = "Population (2015)", label = scales::comma) +
theme(legend.position = "right")
gg + ggplot(data = county_measles, values = "cases", lines = "blue") +
scale_fill_continuous(name = "Population (2015)", label = scales::comma) +
theme(legend.position = "right")
gg + ggplot(data = county_measles, values = "cases", fill = "blue") +
scale_fill_continuous(name = "Population (2015)", label = scales::comma) +
theme(legend.position = "right")
ggplot(county_measles, aes(x = long, y = lat, group = group, fill = dog)) +
geom_polygon() +
coord_equal()
county_measles
county
ggplot(choropleth, aes(x = long, y = lat, group = group, fill = dog)) +
geom_polygon() +
coord_equal()
choropleth
ggplot(choropleth, aes(x = long, y = lat, group = group, fill = cases)) +
geom_polygon() +
coord_equal()
shape_map
choropleth
choropleth <- inner_join(county, county_measles, by = "subregion")
choropleth <- choropleth[!duplicated(choropleth$subregion), ]
choropleth <- inner_join(county, county_measles, by = "subregion")
county_measles <- read.xlsx("county_level_measles.xlsx")
county <- map_data("county")
state <- map_data("state")
uscounties <- ggcounty.us()
county_measles$county <- tolower(county_measles$county)
county_measles$state <- tolower(county_measles$state)
colnames(county_measles)[colnames(county_measles)=="county"] <- "subregion"
colnames(county_measles)[colnames(county_measles)=="state"] <- "region"
choropleth <- inner_join(county, county_measles, by = "subregion")
choropleth <- choropleth[!duplicated(choropleth$subregion), ]
choropleth
county
choropleth <- inner_join(county, county_measles, by = "order")
county_measles
county
county
county_measles
shape_map <- tbl_df(fortify(county, region="subregion"))
shape_map
class(shape_map)
gg <- gg + geom_map(data=county, map=county,
aes(long, lat, map_id=region),
color= "white", fill=factor(choropleth$cases), size=0.15)
gg <- gg + coord_map("polyconic")
gg <- gg + theme_map()
gg <- gg + theme(plot.margin=margin(20,20,20,20))
gg
gg <- uscounties$g
gg <- gg + geom_map(data=county, map=uscounties$map,
aes(map_id=FIPS, fill=per_point_diff_2016*100),
color="white", size=0.125)
gg
gg <- gg + geom_map(data=county, map=uscounties$map,
aes(map_id=fips, fill=per_point_diff_2016*100),
color="white", size=0.125)
gg
gg <- plot_usmap(regions = "counties") +
labs(title = "US Counties", subtitle = "This is a blank map of the counties of the United States.") +
theme(panel.background = element_rect(colour = "black", fill = "lightblue") +
)
gg <- plot_usmap(regions = "counties") +
labs(title = "US Counties", subtitle = "This is a blank map of the counties of the United States.") +
theme(panel.background = element_rect(colour = "black", fill = "lightblue")
)
gg
class(plot_usmap)
me <- counties(c("California", "Michigan", "New Jersey", "New York", "Oregon", "Washington"),, cb = TRUE)
me <- counties(c("California", "Michigan", "New Jersey", "New York", "Oregon", "Washington"),, cb = TRUE)
me <- counties(c("California", "Michigan", "New Jersey", "New York", "Oregon", "Washington"),, cb = TRUE
me_map <- fortify(me)
me <- counties(c("California", "Michigan", "New Jersey", "New York", "Oregon", "Washington"), cb = TRUE)
me_map <- fortify(me)
gg <- ggplot()
gg <- gg + geom_map(data=me_map, map=me_map,
aes(x=long, y=lat, map_id=id),
color="black", fill="white", size=0.25)
gg <- gg + coord_map()
gg <- gg + theme_map()
gg
class(me_map)
class(me)
gg <- gg + geom_polygon(data = county_measles, fill = "cases")
gg
gg
county_measles
choropleth
choropleth <- choropleth %>%
select(-region.x)
choropleth
gg <- gg + geom_polygon(data = county_measles, aes(fill = "cases"))
gg
gg <- gg + geom_polygon(aes(fill = id))
gg
gg +
geom_polygon(aes(fill = id)) +
coord_fixed(1.3) +
guides(fill = FALSE)
me_map
me
gg <- ggplot()
gg <- gg + geom_map(data=me_map, map=me_map,
aes(x=long, y=lat, map_id=id),
color="black", fill="white", size=0.25)
gg
class(gg)
me
View(me)
me_map
View(me_map)
county_measles
View(me_map)
me
class(me)
gg <- ggplot()
gg <- gg + geom_map(data=me_map, map=me_map,
aes(x=long, y=lat, map_id=id),
color="black", fill="white", size=0.25)
class(gg)
gg
knitr::opts_chunk$set(echo = TRUE)
measles
county_measles
county
county_measles
household_data <- left_join(county, county_measles, by = "subregion")
household_data
household_data %>%
ggplot(aes(long, lat, group = group, fill = cases)) +
geom_polygon(color = NA) +
coord_map(projection = "albers", lat0 = 39, lat1 = 45) +
labs(fill = "Median Household Income")
county
county_measles
county
?map_data
f <- tempfile()
download.file("http://www2.census.gov/geo/tiger/GENZ2010/gz_2010_us_050_00_20m.zip", destfile = f)
unzip(f, exdir = ".")
US <- read_shape("gz_2010_us_050_00_20m.shp")
library(tmap)
US <- read_shape("gz_2010_us_050_00_20m.shp")
US <- tmap::read_shape("gz_2010_us_050_00_20m.shp")
library(tmap)
US <- tmap::read_shape("gz_2010_us_050_00_20m.shp")
US <- read_shape("gz_2010_us_050_00_20m.shp")
install.packages("tmap")
US <- read_shape("gz_2010_us_050_00_20m.shp")
knitr::opts_chunk$set(echo = TRUE)
library(tmap)
US <- read_shape("gz_2010_us_050_00_20m.shp")
US <- tmap::read_shape("gz_2010_us_050_00_20m.shp")
US <- read_shape("gz_2010_us_050_00_20m.shp")
library(raster)
US <- read_shape("gz_2010_us_050_00_20m.shp")
knitr::opts_chunk$set(echo = TRUE)
class(me)
tm_shape(me) +
tm_fill("blue")
tm_shape(me) +
tm_borders()
View(me)
county_measles
merged <- merge(me, county_measles, by="countyfp")
colnames(county_measles)[colnames(county_measles)=="countyfp"] <- "COUNTYFP"
merged <- merge(me, county_measles, by="countyfp")
county_measles
merged <- merge(me, county_measles$cases, by="countyfp")
choropleth
choropleth %>%
ggplot(aes(long, lat, group = group, fill = cases)) +
geom_polygon(color = NA) +
coord_map(projection = "albers", lat0 = 39, lat1 = 45) +
labs(fill = "Median Household Income")
plotly
library(plotly)
library(dplyr)
library(openxlsx)
library(magrittr)
library(ggcounty)
library(ggthemes)
library(ggplot2)
choropleth %>%
ggplot(aes(long, lat, group = group, fill = cases)) +
geom_polygon(color = NA) +
coord_map(projection = "albers", lat0 = 39, lat1 = 45) +
labs(fill = "Median Household Income")
choropleth <- left_join(county, county_measles, by = "order")
gg <- ggplot()
gg <- gg + geom_map(data=me_map, map=me_map,
aes(x=long, y=lat, map_id=id),
color="black", fill="white", size=0.25)
gg
ggplot(aes(long, lat, group = group, fill = cases)) +
gg +
geom_polygon(data = choropleth, aes(long, lat, group = group, fill = cases), color = 'gray', size = 0.1) +
coord_fixed(1.3)
gg +
geom_polygon(data = choropleth, aes(long, lat, group = group, fill = cases), color = 'gray', size = 0.1) +
coord_fixed(1.3)
gg
knitr::opts_chunk$set(echo = TRUE)
us_counties <- map_data("county")
p + geom_polygon(fill = "white", color = "black")
p <- ggplot(data = us_states,
mapping = aes(x = long, y = lat,
group = group))
p <- ggplot(data = us_counties,
mapping = aes(x = long, y = lat,
group = group))
p + geom_polygon(fill = "white", color = "black")
p <- ggplot(data = us_counties,
aes(x = long, y = lat,
group = group, fill = region))
p + geom_polygon(color = "gray90", size = 0.1) + guides(fill = FALSE)
county_measles <- read.xlsx("county_level_measles.xlsx")
county_measles
us_counties
us_counties <- us_counties %>%
select(c("California", "Michigan", "New Jersey", "New York", "Oregon", "Washington"))
us_counties
us_counties <- us_counties %>%
select(c("california", "michigan", "new jersey", "new york", "oregon", "washington"))
us_counties
us_counties <- us_counties %>%
filter(region == c("california", "michigan", "new jersey", "new york", "oregon", "washington"))
p <- ggplot(data = us_counties,
mapping = aes(x = long, y = lat,
group = group))
p + geom_polygon(color = "gray90", size = 0.1) + guides(fill = FALSE)
p + geom_polygon(color = "gray90", size = 0.1) + guides(fill = TRUE)
us_counties <- fortify(us_counties)
p <- ggplot(data = us_counties,
mapping = aes(x = long, y = lat,
group = group))
p + geom_polygon(color = "gray90", size = 0.1) + guides(fill = TRUE)
us_counties <- map_data("county")
p + geom_polygon(color = "gray90", size = 0.1) + guides(fill = TRUE)
p <- ggplot(data = us_counties,
aes(x = long, y = lat,
group = group, fill = region))
p + geom_polygon(color = "gray90", size = 0.1) + guides(fill = TRUE)
p + geom_polygon(color = "gray90", size = 0.1) + guides(fill = FALSE)
county_measles
us_counties
county_measles
colnames(county_measles)[colnames(county_measles)=="county"] <- "subregion"
county_measles$subregion <- tolower(county_measles$subregion)
us_county_measles <- left_join(us_counties, county_measles)
us_county_measles
p <- ggplot(data = us_county_measles,
aes(x = long, y = lat,
group = group, fill = cases))
p + geom_polygon(color = "gray90", size = 0.1) +
coord_map(projection = "albers", lat0 = 39, lat1 = 45)
us_county_measles
us_county_measles <- us_county_measles %>%
filter(region == c("california", "michigan", "new jersey", "new york", "oregon", "washington"))
p <- ggplot(data = us_county_measles,
aes(x = long, y = lat,
group = group, fill = cases))
p + geom_polygon(color = "gray90", size = 0.1) +
coord_map(projection = "albers", lat0 = 39, lat1 = 45)
install.packages("urbnmapr")
devtools::install_github(“UrbanInstitute/urbnmapr”)
devtools::install_github(UrbanInstitute/urbnmapr)
devtools::install_github("UrbanInstitute/urbnmapr")
knitr::opts_chunk$set(echo = TRUE)
ggplot() +
geom_polygon(data = urbnmapr::counties, mapping = aes(x = long, y = lat, group = group),
fill = “grey”, color = “white”) +
library(tidyverse)
library(urbnmapr)
ggplot() +
geom_polygon(data = urbnmapr::counties, mapping = aes(x = long, y = lat, group = group),
fill = “grey”, color = “white”) +
ggplot() +
geom_polygon(data = urbnmapr::counties, mapping = aes(x = long, y = lat, group = group, fill = id),
fill = “grey”, color = “white”) +
fill = “grey”, color = “white”) +
library(tidyverse)
library(urbnmapr)
ggplot() +
geom_polygon(data = urbnmapr::counties, mapping = aes(x = long, y = lat, group = group,
fill = “grey”, color = “white”) +
ggplot() +
geom_polygon(data = urbnmapr::states, mapping = aes(x = long, y = lat, group = group),
fill = “grey”, color = “white”) +
ggplot() +
geom_polygon(data = urbnmapr::states, mapping = aes(x = long, y = lat, group = group),
fill = “grey”, color = “white”) +
p <- ggplot(data = us_counties,
aes(x = long, y = lat,
group = group, fill = county))
p + geom_polygon(color = "gray90", size = 0.1) + guides(fill = FALSE)
p <- ggplot(data = us_counties,
aes(x = long, y = lat,
group = group, fill = region))
p + geom_polygon(color = "gray90", size = 0.1) + guides(fill = FALSE)
states <- map_data("county")
county <- map_data("county")
county
map.df <- merge(county,county_measles, by=c("region", "subregion"), all.x=T)
county_measles
colnames(county_measles)[colnames(county_measles)=="state"] <- "region"
map.df <- map.df[order(map.df$order),]
map.df <- merge(county,county_measles, by=c("region", "subregion"), all.x=T)
map.df <- map.df[order(map.df$order),]
ggplot(map.df, aes(x=long,y=lat,group=group))+
geom_polygon(aes(fill=Count))+
geom_path()+
scale_fill_gradientn(colours=rev(heat.colors(10)),na.value="grey90")+
coord_map()
ggplot(map.df, aes(x=long,y=lat,group=group))+
geom_polygon(aes(fill=cases))+
geom_path()+
scale_fill_gradientn(colours=rev(heat.colors(10)),na.value="grey90")+
coord_map()
us_counties
us_county_measles <- left_join(us_counties, county_measles, by = c("region", "subregion"))
p <- ggplot(data = us_county_measles,
aes(x = long, y = lat,
group = group, fill = cases))
p + geom_polygon(color = "gray90", size = 0.1) +
coord_map(projection = "albers", lat0 = 39, lat1 = 45)
p + geom_polygon(fill = cases) +
coord_map(projection = "albers", lat0 = 39, lat1 = 45)
p <- ggplot(data = us_county_measles,
aes(x = long, y = lat,
group = group, fill = cases))
p
p + geom_polygon(color = "gray90", size = 0.1) +
coord_map(projection = "albers", lat0 = 39, lat1 = 45)
p2 <- p + scale_fill_manual(values = cases) +
labs(title = "Election Results 2016", fill = NULL)
p <- ggplot(choropleth, aes(long, lat, group = group)) +
geom_polygon(aes(fill = cases),
colour = alpha("white", 1/2), size = 0.1)  +
geom_polygon(data = state_df, colour = "white", fill = NA) +
scale_fill_manual(values = c('blue','red')) +
theme_void()
p
p <- ggplot(choropleth, aes(long, lat, group = group)) +
geom_polygon(aes(fill = cases),
colour = alpha("white", 1/2), size = 0.1)  +
geom_polygon(data = county, colour = "white", fill = cases) +
scale_fill_manual(values = c('blue','red')) +
theme_void()
p <- ggplot(choropleth, aes(long, lat, group = group)) +
geom_polygon(aes(fill = cases),
colour = alpha("white", 1/2), size = 0.1)  +
geom_polygon(data = us_county_measles, colour = "white", fill = cases) +
scale_fill_manual(values = c('blue','red')) +
theme_void()
p <- ggplot(choropleth, aes(long, lat, group = group)) +
geom_polygon(aes(fill = cases),
colour = alpha("white", 1/2), size = 0.1)  +
geom_polygon(data = us_county_measles, colour = "white", fill = "cases") +
scale_fill_manual(values = c('blue','red')) +
theme_void()
p
choropleth
p <- ggplot(choropleth, aes(long, lat, group = group)) +
geom_polygon(),
p <- ggplot(choropleth, aes(long, lat, group = group)) +
geom_polygon()
colour = alpha("white", 1/2), size = 0.1)  +
p <- ggplot(choropleth, aes(long, lat, group = group)) +
geom_polygon(
colour = alpha("white", 1/2), size = 0.1)  +
geom_polygon(data = state_df, colour = "white", fill = NA) +
scale_fill_manual(values = c('blue','red')) +
theme_void()
p
colour = alpha("white", 1/2), size = 0.1)  +
()
colour = alpha("white", 1/2), size = 0.1)  +
p
p <- ggplot(data = us_county_measles,
aes(x = long, y = lat,
group = group, fill = cases))
p
ggplot(choropleth, aes(x = long, y = lat, group = group, fill = cases)) +
geom_polygon() +
coord_equal()
map.df
map.df <- map.df[order(map.df$order),]
View(county)
county
ggplot(map.df, aes(x=long,y=lat,group=group))+
geom_polygon(aes(fill=cases))+
geom_path()+
scale_fill_gradientn(colours=rev(heat.colors(10)),na.value="grey90")+
coord_map()
map.df
map.df <- map.df[order(map.df$order),]
View(map.df)
ggplot(map.df, aes(x=long,y=lat,group=group))+
geom_polygon(aes(fill=cases))+
geom_path()+
scale_fill_gradientn(colours=rev(heat.colors(10)),na.value="grey90")+
coord_map()
